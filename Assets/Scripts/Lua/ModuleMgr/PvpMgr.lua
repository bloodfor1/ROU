---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by richardjiang.
--- DateTime: 2018/9/15 18:34
---
---@module ModuleMgr.PvpMgr
module("ModuleMgr.PvpMgr", package.seeall)

m_battleTime = 0
m_passTime = 0
m_type = nil
g_BattleTex = nil
g_isShowMvp = false
g_reward = {}
g_assistReward = {}

local PERCENT = 1000
local DELAY_TIME = 3
local l_delayTimer = nil

function OnEnterScene(sceneId)
    if g_BattleTex then
        Object.Destroy(g_BattleTex)
        g_BattleTex = nil
    end
    if l_delayTimer then
        MUIManager.UICamera.enabled = true
        l_delayTimer:Stop()
        l_delayTimer = nil
    end
end

function OnLeaveScene()
    g_isShowMvp = false
    g_reward = {}
    g_assistReward = {}
    MUIManager.UICamera.enabled = true
end

--==============================--
--@Description: 报名
--@Date: 2018/9/20
--@Param: [args]
--@Return:
--==============================--
function JoinPvp(type)
    local dailyTaskMgr = MgrMgr:GetMgr("DailyTaskMgr")
    if type == dailyTaskMgr.g_ActivityType.activity_Ring then
        MgrMgr:GetMgr("ArenaMgr").JoinArena()
    else
        MgrMgr:GetMgr("SystemFunctionEventMgr").JoinBattle()
    end
end

--==============================--
--@Description: 报名结果
--@Date: 2018/9/20
--@Param: [args]
--@Return:
--==============================--
function OnBattlefieldApply(msg)
    ---@type PVPApplyRes
    local l_info = ParseProtoBufToTable("PVPApplyRes", msg)

    if l_info.result ~= 0 then
        if l_info.result == ErrorCode.ERR_DAILY_ACTIVITY_NOT_OPEN and l_info.type then
            if l_info.type == EnmDailyActivityType.EnmDailyActivityTypePlatform then
                return MgrMgr:GetMgr("TipsMgr").ShowNormalTips(Lang("ARENA_SIGN_UP_FAIL"))
            else
                return MgrMgr:GetMgr("TipsMgr").ShowNormalTips(Common.Functions.GetErrorCodeStr(l_info.result))
            end
        end
        return MgrMgr:GetMgr("TipsMgr").ShowNormalTips(Common.Functions.GetErrorCodeStr(l_info.result))
    end

    if l_info.type == MgrMgr:GetMgr("DailyTaskMgr").g_ActivityType.activity_Ring then
        MgrMgr:GetMgr("ArenaMgr").OnBattlefieldApply(l_info)
    else
        MgrMgr:GetMgr("BattleMgr").OnBattlefieldApply(l_info)
    end
end

---@param id uint64
---@param info RoleBattleBriefInfo
function GeneratePvpCountersInfo(id, info)
    local l_kill = 0
    local l_help = 0
    local l_score = 0
    local l_beKill = 0
    local damage = 0
    local heal = 0
    local l_roleInfo = info
    if #l_roleInfo > 0 then
        for i = 1, #l_roleInfo do
            local l_roleId = l_roleInfo[i].role_id
            if uint64.equals(l_roleId, id) then
                local l_counters = l_roleInfo[i].pvp_counters
                if table.ro_size(l_counters) > 0 then
                    for k, v in pairs(l_counters) do
                        local key = l_counters[k].key
                        if not key then
                            key = 0
                        end

                        local value = l_counters[k].value
                        if not value then
                            value = 0
                        end

                        if key ~= 0 or value ~= 0 then
                            if key == MLuaClientHelper.GetROGameLibsEnumValue(ROGameLibs.PVPType.PVP_PLAYER_KILL_NUM) then
                                l_kill = value
                            elseif key == MLuaClientHelper.GetROGameLibsEnumValue(ROGameLibs.PVPType.PVP_PLAYER_ASSIST_NUM) then
                                l_help = value
                            elseif key == MLuaClientHelper.GetROGameLibsEnumValue(ROGameLibs.PVPType.PVP_PLAYER_SCORE) then
                                l_score = value
                            elseif key == MLuaClientHelper.GetROGameLibsEnumValue(ROGameLibs.PVPType.PVP_PLAYER_BE_KILLED_NUM) then
                                l_beKill = value
                            elseif key == MLuaClientHelper.GetROGameLibsEnumValue(ROGameLibs.PVPType.PVP_OUTPUT_DAMAGE_VALUE) then
                                damage = value
                            elseif key == MLuaClientHelper.GetROGameLibsEnumValue(ROGameLibs.PVPType.PVP_RECOVERY_HP_VALUE) then
                                heal = value
                            end
                        end
                    end
                end

                break
            end
        end
    end

    return l_kill, l_help, l_score / PERCENT, l_beKill, damage, heal
end

function ExcuteCameraTex(mvpId, activityType)
    if not MgrMgr:GetMgr("DungeonMgr").IsInDungeons() then
        return
    end
    -- 停止角色行为
    MSkillTargetMgr.singleton:ResetTarget(nil)
    --展示MVP 中止自身寻路 中止自动战斗
    MTransferMgr:Interrupt()
    MgrMgr:GetMgr("TeamMgr").FollowSet(false)

    g_isShowMvp = true
    MgrMgr:GetMgr("MoveControllerMgr").DeActiveMoveController()
    --MUIManager:DeActiveUI(MUIManager.MOVE_CONTROLLER)
    MUIManager.UICamera.enabled = false
    local l_cameraArgs = MGlobalConfig:GetSequenceOrVectorInt("BgScreenShotCameraAngleID")
    local l_tempValue = math.modf(math.random(0, l_cameraArgs.Length - 1))
    local l_cameraId = tonumber(l_cameraArgs[l_tempValue])
    l_cameraId = l_cameraId ~= nil and l_cameraId or 60
    local l_e = MEntityMgr.PlayerEntity
    local l_dis = MScene.GameCamera.Dis
    local l_rotx = MScene.GameCamera.RotX
    local l_roty = MScene.GameCamera.RotY
    local l_rotz = MScene.GameCamera.RotZ
    if l_e and l_e.AttrComp and l_e.Model then
        MPlayerInfo:Focus2AdaptiveState(l_cameraId, MPlayerInfo.UID)
    end
    local l_camera = MScene.GameCamera.UCam
    MScreenCapture.TakeScreenShot(UnityEngine.Rect.New(0, 0, l_camera.pixelWidth - 2
    , l_camera.pixelHeight - 2), function(l_tex)
        if not MgrMgr:GetMgr("DungeonMgr").IsInDungeons() then
            if l_tex ~= nil then
                Object.Destroy( l_tex )
                l_tex = nil
            end
            
            return
        end
        MScene.GameCamera.Dis = l_dis
        MScene.GameCamera.RotX = l_rotx
        MScene.GameCamera.RotY = l_roty
        MScene.GameCamera.RotZ = l_rotz
        MPlayerInfo:FocusToMyPlayer()
        if g_BattleTex ~= nil then
            Object.Destroy( g_BattleTex )
            g_BattleTex = nil
        end
        g_BattleTex = l_tex
        DelayFocus(mvpId, activityType)
    end)
end

function Focus2Mvp(roleId, action)
    if not MgrMgr:GetMgr("DungeonMgr").IsInDungeons() then
        return
    end
    local l_cameraId = MGlobalConfig:GetInt("BgMvpCameraAngleID")
    local l_e = MEntityMgr:GetEntity(roleId, false)
    if l_e and l_e.AttrComp then
        l_cameraId = (l_cameraId ~= nil and l_cameraId ~= 0) and l_cameraId or 20
        MPlayerInfo:Focus2AdaptiveState(l_cameraId, roleId)
        UIMgr:ActiveUI(UI.CtrlNames.BattleMvpMask, function()
            local l_ui = UIMgr:GetUI(UI.CtrlNames.BattleMvpMask)
            if l_ui then
                l_ui:Play(l_e, action)
            end
        end)
        return
    else
        --logGreen("[BattleMgr]Entity is null.")
        if action then
            action()
        end
    end
end

function DelayFocus(mvpId, activityType)
    if not MgrMgr:GetMgr("DungeonMgr").IsInDungeons() then
        return
    end

    local dailyTaskMgr = MgrMgr:GetMgr("DailyTaskMgr")
    local onCameraFocusEnd = nil
    if activityType == dailyTaskMgr.g_ActivityType.activity_Ring or activityType == dailyTaskMgr.g_ActivityType.activity_GuildMatch then
        onCameraFocusEnd = function()
            UIMgr:ActiveUI(UI.CtrlNames.RingBattleEnd)
        end
    else
        onCameraFocusEnd = _openBattleFieldEndPanel
    end

    if mvpId then
        local l_duration = DELAY_TIME
        l_delayTimer = Timer.New(function()
            l_duration = l_duration - 1
            if l_duration < 0 then
                if l_delayTimer then
                    l_delayTimer:Stop()
                    l_delayTimer = nil
                end
                MUIManager.UICamera.enabled = true
                Focus2Mvp(mvpId, function()
                    g_isShowMvp = false
                    MgrMgr:GetMgr("MoveControllerMgr").ActiveMoveController()
                    --MUIManager:ActiveUI(MUIManager.MOVE_CONTROLLER)
                    onCameraFocusEnd()
                end)
            end
        end, 1, -1, true)
        l_delayTimer:Start()
    else
        MUIManager.UICamera.enabled = true
        onCameraFocusEnd()
    end
end

function _openBattleFieldEndPanel()
    local itemList = {}
    --- 结算界面弹出后，会触发一堆奖励提示，也就是这个东西用来做副本结算的
    if g_reward and #g_reward > 0 then
        for i = 1, #g_reward do
            local l_target = g_reward[i]
            local l_opt = {
                itemId = l_target.id,
                itemOpts = { num = l_target.num, icon = { size = 18, width = 1.4 } },
            }

            MgrMgr:GetMgr("TipsMgr").ShowNormalTips(l_opt)
            local itemData = Data.BagApi:CreateLocalItemData(l_target.id)
            if nil ~= itemData then
                itemData.ItemCount = ToInt64(l_target.num)
                table.insert(itemList, itemData)
            end
        end

        g_reward = {}
    end

    ---@type ResultPanelData
    local data = {}
    -- todo 这里有问题，两个类相互依赖了
    data.Win = MgrMgr:GetMgr("BattleMgr").DidBattleWin()
    data.PassTime = MgrMgr:GetMgr("BattleMgr").GetBattleFieldPassTime()
    data.OnClick = _openBattleEndPanel
    data.ItemDataList = itemList
    data.CanClickSkip = false
    UIMgr:ActiveUI(UI.CtrlNames.BattleEndFail, data)
end

--- 开结算界面
function _openBattleEndPanel()
    UIMgr:ActiveUI(UI.CtrlNames.BattleEnd)
end

function Save2Phone()
    if g_BattleTex then
        MgrMgr:GetMgr("AlbumMgr").SavePhotoToSystemAlbum(g_BattleTex)
    end
end

function Save2Photo()
    if g_BattleTex then
        local albumList = MgrMgr:GetMgr("AlbumMgr").GetAlbumNameList()
        if #albumList >= 1 then
            MgrMgr:GetMgr("AlbumMgr").SelectSavePhotoToAlbum(albumList[1], g_BattleTex, false)
            MgrMgr:GetMgr("TipsMgr").ShowNormalTips(Common.Utils.Lang("PHOTOGRAPH_SAVE_TO_ALBUM_SUCC"))
        end
    end
end

function IsShowMvp()
    return g_isShowMvp
end

function DumpReward(id, num)
    local l_index = #g_reward + 1
    g_reward[l_index] = {}
    g_reward[l_index].id = id
    g_reward[l_index].num = num
end
function DumpAssistReward(id, num)
    local l_index = #g_assistReward + 1
    g_assistReward[l_index] = {}
    g_assistReward[l_index].id = id
    g_assistReward[l_index].num = num
end
