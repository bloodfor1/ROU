//this source code was auto-generated by tolua#, do not modify it
using System;
using MoonCommonLib;
using LuaInterface;

public class SDKLib_SDKInterface_EDevicePermissionTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(SDKLib.SDKInterface.EDevicePermissionType));
		L.RegVar("None", get_None, null);
		L.RegVar("Location", get_Location, null);
		L.RegVar("Notification", get_Notification, null);
		L.RegVar("Camera", get_Camera, null);
		L.RegVar("Photos", get_Photos, null);
		L.RegVar("Microphone", get_Microphone, null);
		L.RegVar("Network", get_Network, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<SDKLib.SDKInterface.EDevicePermissionType>.Check = CheckType;
		StackTraits<SDKLib.SDKInterface.EDevicePermissionType>.Push = Push;
	}

	static void Push(IntPtr L, SDKLib.SDKInterface.EDevicePermissionType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(SDKLib.SDKInterface.EDevicePermissionType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_None(IntPtr L)
	{
		ToLua.Push(L, SDKLib.SDKInterface.EDevicePermissionType.None);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Location(IntPtr L)
	{
		ToLua.Push(L, SDKLib.SDKInterface.EDevicePermissionType.Location);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Notification(IntPtr L)
	{
		ToLua.Push(L, SDKLib.SDKInterface.EDevicePermissionType.Notification);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Camera(IntPtr L)
	{
		ToLua.Push(L, SDKLib.SDKInterface.EDevicePermissionType.Camera);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Photos(IntPtr L)
	{
		ToLua.Push(L, SDKLib.SDKInterface.EDevicePermissionType.Photos);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Microphone(IntPtr L)
	{
		ToLua.Push(L, SDKLib.SDKInterface.EDevicePermissionType.Microphone);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Network(IntPtr L)
	{
		ToLua.Push(L, SDKLib.SDKInterface.EDevicePermissionType.Network);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		SDKLib.SDKInterface.EDevicePermissionType o = (SDKLib.SDKInterface.EDevicePermissionType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

