//this source code was auto-generated by tolua#, do not modify it
using System;
using MoonCommonLib;
using LuaInterface;

public class RenderHeads_Media_AVProVideo_MediaPlayerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(RenderHeads.Media.AVProVideo.MediaPlayer), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("OpenVideoFromFile", OpenVideoFromFile);
		L.RegFunction("OpenVideoFromBuffer", OpenVideoFromBuffer);
		L.RegFunction("StartOpenChunkedVideoFromBuffer", StartOpenChunkedVideoFromBuffer);
		L.RegFunction("AddChunkToVideoBuffer", AddChunkToVideoBuffer);
		L.RegFunction("EndOpenChunkedVideoFromBuffer", EndOpenChunkedVideoFromBuffer);
		L.RegFunction("EnableSubtitles", EnableSubtitles);
		L.RegFunction("DisableSubtitles", DisableSubtitles);
		L.RegFunction("CloseVideo", CloseVideo);
		L.RegFunction("Play", Play);
		L.RegFunction("Pause", Pause);
		L.RegFunction("Stop", Stop);
		L.RegFunction("Rewind", Rewind);
		L.RegFunction("GetPlatform", GetPlatform);
		L.RegFunction("GetCurrentPlatformOptions", GetCurrentPlatformOptions);
		L.RegFunction("GetPath", GetPath);
		L.RegFunction("GetFilePath", GetFilePath);
		L.RegFunction("CreatePlatformMediaPlayer", CreatePlatformMediaPlayer);
		L.RegFunction("ExtractFrameAsync", ExtractFrameAsync);
		L.RegFunction("ExtractFrame", ExtractFrame);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_VideoLocation", get_m_VideoLocation, set_m_VideoLocation);
		L.RegVar("m_VideoPath", get_m_VideoPath, set_m_VideoPath);
		L.RegVar("m_AutoOpen", get_m_AutoOpen, set_m_AutoOpen);
		L.RegVar("m_AutoStart", get_m_AutoStart, set_m_AutoStart);
		L.RegVar("m_Loop", get_m_Loop, set_m_Loop);
		L.RegVar("m_Volume", get_m_Volume, set_m_Volume);
		L.RegVar("m_Muted", get_m_Muted, set_m_Muted);
		L.RegVar("m_PlaybackRate", get_m_PlaybackRate, set_m_PlaybackRate);
		L.RegVar("m_Resample", get_m_Resample, set_m_Resample);
		L.RegVar("m_ResampleMode", get_m_ResampleMode, set_m_ResampleMode);
		L.RegVar("m_ResampleBufferSize", get_m_ResampleBufferSize, set_m_ResampleBufferSize);
		L.RegVar("m_StereoPacking", get_m_StereoPacking, set_m_StereoPacking);
		L.RegVar("m_AlphaPacking", get_m_AlphaPacking, set_m_AlphaPacking);
		L.RegVar("m_DisplayDebugStereoColorTint", get_m_DisplayDebugStereoColorTint, set_m_DisplayDebugStereoColorTint);
		L.RegVar("m_FilterMode", get_m_FilterMode, set_m_FilterMode);
		L.RegVar("m_WrapMode", get_m_WrapMode, set_m_WrapMode);
		L.RegVar("m_AnisoLevel", get_m_AnisoLevel, set_m_AnisoLevel);
		L.RegVar("FrameResampler", get_FrameResampler, null);
		L.RegVar("Persistent", get_Persistent, set_Persistent);
		L.RegVar("VideoLayoutMapping", get_VideoLayoutMapping, set_VideoLayoutMapping);
		L.RegVar("Info", get_Info, null);
		L.RegVar("Control", get_Control, null);
		L.RegVar("Player", get_Player, null);
		L.RegVar("TextureProducer", get_TextureProducer, null);
		L.RegVar("Subtitles", get_Subtitles, null);
		L.RegVar("Events", get_Events, null);
		L.RegVar("VideoOpened", get_VideoOpened, null);
		L.RegVar("PauseMediaOnAppPause", get_PauseMediaOnAppPause, set_PauseMediaOnAppPause);
		L.RegVar("PlayMediaOnAppUnpause", get_PlayMediaOnAppUnpause, set_PlayMediaOnAppUnpause);
		L.RegVar("ForceFileFormat", get_ForceFileFormat, set_ForceFileFormat);
		L.RegVar("AudioHeadTransform", get_AudioHeadTransform, set_AudioHeadTransform);
		L.RegVar("AudioFocusEnabled", get_AudioFocusEnabled, set_AudioFocusEnabled);
		L.RegVar("AudioFocusOffLevelDB", get_AudioFocusOffLevelDB, set_AudioFocusOffLevelDB);
		L.RegVar("AudioFocusWidthDegrees", get_AudioFocusWidthDegrees, set_AudioFocusWidthDegrees);
		L.RegVar("AudioFocusTransform", get_AudioFocusTransform, set_AudioFocusTransform);
		L.RegVar("PlatformOptionsWindows", get_PlatformOptionsWindows, null);
		L.RegVar("PlatformOptionsMacOSX", get_PlatformOptionsMacOSX, null);
		L.RegVar("PlatformOptionsIOS", get_PlatformOptionsIOS, null);
		L.RegVar("PlatformOptionsTVOS", get_PlatformOptionsTVOS, null);
		L.RegVar("PlatformOptionsAndroid", get_PlatformOptionsAndroid, null);
		L.RegVar("PlatformOptionsWindowsPhone", get_PlatformOptionsWindowsPhone, null);
		L.RegVar("PlatformOptionsWindowsUWP", get_PlatformOptionsWindowsUWP, null);
		L.RegVar("PlatformOptionsWebGL", get_PlatformOptionsWebGL, null);
		L.RegVar("PlatformOptionsPS4", get_PlatformOptionsPS4, null);
		L.RegVar("SubtitlesEnabled", get_SubtitlesEnabled, null);
		L.RegVar("SubtitlePath", get_SubtitlePath, null);
		L.RegVar("SubtitleLocation", get_SubtitleLocation, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OpenVideoFromFile(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				bool o = obj.OpenVideoFromFile(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 3)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				MoonCommonLib.EFileLocation arg0 = (MoonCommonLib.EFileLocation)ToLua.CheckObject(L, 2, typeof(MoonCommonLib.EFileLocation));
				string arg1 = ToLua.CheckString(L, 3);
				bool o = obj.OpenVideoFromFile(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 4)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				MoonCommonLib.EFileLocation arg0 = (MoonCommonLib.EFileLocation)ToLua.CheckObject(L, 2, typeof(MoonCommonLib.EFileLocation));
				string arg1 = ToLua.CheckString(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				bool o = obj.OpenVideoFromFile(arg0, arg1, arg2);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: RenderHeads.Media.AVProVideo.MediaPlayer.OpenVideoFromFile");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OpenVideoFromBuffer(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
				bool o = obj.OpenVideoFromBuffer(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 3)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				bool o = obj.OpenVideoFromBuffer(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: RenderHeads.Media.AVProVideo.MediaPlayer.OpenVideoFromBuffer");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartOpenChunkedVideoFromBuffer(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				ulong arg0 = LuaDLL.tolua_checkuint64(L, 2);
				bool o = obj.StartOpenChunkedVideoFromBuffer(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 3)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				ulong arg0 = LuaDLL.tolua_checkuint64(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				bool o = obj.StartOpenChunkedVideoFromBuffer(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: RenderHeads.Media.AVProVideo.MediaPlayer.StartOpenChunkedVideoFromBuffer");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddChunkToVideoBuffer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
			byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
			ulong arg1 = LuaDLL.tolua_checkuint64(L, 3);
			ulong arg2 = LuaDLL.tolua_checkuint64(L, 4);
			bool o = obj.AddChunkToVideoBuffer(arg0, arg1, arg2);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EndOpenChunkedVideoFromBuffer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
			bool o = obj.EndOpenChunkedVideoFromBuffer();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnableSubtitles(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
			MoonCommonLib.EFileLocation arg0 = (MoonCommonLib.EFileLocation)ToLua.CheckObject(L, 2, typeof(MoonCommonLib.EFileLocation));
			string arg1 = ToLua.CheckString(L, 3);
			bool o = obj.EnableSubtitles(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DisableSubtitles(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
			obj.DisableSubtitles();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseVideo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
			obj.CloseVideo();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Play(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
			obj.Play();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Pause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
			obj.Pause();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Stop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
			obj.Stop();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Rewind(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.Rewind(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPlatform(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			RenderHeads.Media.AVProVideo.Platform o = RenderHeads.Media.AVProVideo.MediaPlayer.GetPlatform();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCurrentPlatformOptions(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer.PlatformOptions o = obj.GetCurrentPlatformOptions();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MoonCommonLib.EFileLocation arg0 = (MoonCommonLib.EFileLocation)ToLua.CheckObject(L, 1, typeof(MoonCommonLib.EFileLocation));
			string o = RenderHeads.Media.AVProVideo.MediaPlayer.GetPath(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFilePath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			MoonCommonLib.EFileLocation arg1 = (MoonCommonLib.EFileLocation)ToLua.CheckObject(L, 2, typeof(MoonCommonLib.EFileLocation));
			string o = RenderHeads.Media.AVProVideo.MediaPlayer.GetFilePath(arg0, arg1);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreatePlatformMediaPlayer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
			RenderHeads.Media.AVProVideo.BaseMediaPlayer o = obj.CreatePlatformMediaPlayer();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExtractFrameAsync(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 2, typeof(UnityEngine.Texture2D));
				MoonCommonLib.ProcessExtractedFrame arg1 = (MoonCommonLib.ProcessExtractedFrame)ToLua.CheckDelegate<MoonCommonLib.ProcessExtractedFrame>(L, 3);
				obj.ExtractFrameAsync(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 2, typeof(UnityEngine.Texture2D));
				MoonCommonLib.ProcessExtractedFrame arg1 = (MoonCommonLib.ProcessExtractedFrame)ToLua.CheckDelegate<MoonCommonLib.ProcessExtractedFrame>(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				obj.ExtractFrameAsync(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 2, typeof(UnityEngine.Texture2D));
				MoonCommonLib.ProcessExtractedFrame arg1 = (MoonCommonLib.ProcessExtractedFrame)ToLua.CheckDelegate<MoonCommonLib.ProcessExtractedFrame>(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				obj.ExtractFrameAsync(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 2, typeof(UnityEngine.Texture2D));
				MoonCommonLib.ProcessExtractedFrame arg1 = (MoonCommonLib.ProcessExtractedFrame)ToLua.CheckDelegate<MoonCommonLib.ProcessExtractedFrame>(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 6);
				obj.ExtractFrameAsync(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 7)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 2, typeof(UnityEngine.Texture2D));
				MoonCommonLib.ProcessExtractedFrame arg1 = (MoonCommonLib.ProcessExtractedFrame)ToLua.CheckDelegate<MoonCommonLib.ProcessExtractedFrame>(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 6);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 7);
				obj.ExtractFrameAsync(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: RenderHeads.Media.AVProVideo.MediaPlayer.ExtractFrameAsync");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExtractFrame(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 2, typeof(UnityEngine.Texture2D));
				UnityEngine.Texture2D o = obj.ExtractFrame(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 3)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 2, typeof(UnityEngine.Texture2D));
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				UnityEngine.Texture2D o = obj.ExtractFrame(arg0, arg1);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 4)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 2, typeof(UnityEngine.Texture2D));
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				UnityEngine.Texture2D o = obj.ExtractFrame(arg0, arg1, arg2);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 5)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 2, typeof(UnityEngine.Texture2D));
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.Texture2D o = obj.ExtractFrame(arg0, arg1, arg2, arg3);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 6)
			{
				RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)ToLua.CheckObject<RenderHeads.Media.AVProVideo.MediaPlayer>(L, 1);
				UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 2, typeof(UnityEngine.Texture2D));
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.Texture2D o = obj.ExtractFrame(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: RenderHeads.Media.AVProVideo.MediaPlayer.ExtractFrame");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_VideoLocation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			MoonCommonLib.EFileLocation ret = obj.m_VideoLocation;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_VideoLocation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_VideoPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			string ret = obj.m_VideoPath;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_VideoPath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_AutoOpen(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool ret = obj.m_AutoOpen;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_AutoOpen on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_AutoStart(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool ret = obj.m_AutoStart;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_AutoStart on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_Loop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool ret = obj.m_Loop;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Loop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_Volume(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			float ret = obj.m_Volume;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Volume on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_Muted(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool ret = obj.m_Muted;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Muted on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_PlaybackRate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			float ret = obj.m_PlaybackRate;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_PlaybackRate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_Resample(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool ret = obj.m_Resample;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Resample on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_ResampleMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.Resampler.ResampleMode ret = obj.m_ResampleMode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_ResampleMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_ResampleBufferSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			int ret = obj.m_ResampleBufferSize;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_ResampleBufferSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_StereoPacking(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.StereoPacking ret = obj.m_StereoPacking;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_StereoPacking on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_AlphaPacking(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.AlphaPacking ret = obj.m_AlphaPacking;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_AlphaPacking on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_DisplayDebugStereoColorTint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool ret = obj.m_DisplayDebugStereoColorTint;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_DisplayDebugStereoColorTint on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_FilterMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			UnityEngine.FilterMode ret = obj.m_FilterMode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_FilterMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_WrapMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			UnityEngine.TextureWrapMode ret = obj.m_WrapMode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_WrapMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_AnisoLevel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			int ret = obj.m_AnisoLevel;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_AnisoLevel on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FrameResampler(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.Resampler ret = obj.FrameResampler;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FrameResampler on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Persistent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool ret = obj.Persistent;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Persistent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_VideoLayoutMapping(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.VideoMapping ret = obj.VideoLayoutMapping;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index VideoLayoutMapping on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Info(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.IMediaInfo ret = obj.Info;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Info on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Control(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.IMediaControl ret = obj.Control;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Control on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Player(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.IMediaPlayer ret = obj.Player;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Player on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TextureProducer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.IMediaProducer ret = obj.TextureProducer;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index TextureProducer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Subtitles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.IMediaSubtitles ret = obj.Subtitles;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Subtitles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Events(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.MediaPlayerEvent ret = obj.Events;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Events on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_VideoOpened(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool ret = obj.VideoOpened;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index VideoOpened on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PauseMediaOnAppPause(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool ret = obj.PauseMediaOnAppPause;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PauseMediaOnAppPause on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlayMediaOnAppUnpause(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool ret = obj.PlayMediaOnAppUnpause;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PlayMediaOnAppUnpause on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ForceFileFormat(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.FileFormat ret = obj.ForceFileFormat;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ForceFileFormat on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AudioHeadTransform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			UnityEngine.Transform ret = obj.AudioHeadTransform;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AudioHeadTransform on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AudioFocusEnabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool ret = obj.AudioFocusEnabled;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AudioFocusEnabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AudioFocusOffLevelDB(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			float ret = obj.AudioFocusOffLevelDB;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AudioFocusOffLevelDB on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AudioFocusWidthDegrees(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			float ret = obj.AudioFocusWidthDegrees;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AudioFocusWidthDegrees on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AudioFocusTransform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			UnityEngine.Transform ret = obj.AudioFocusTransform;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AudioFocusTransform on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlatformOptionsWindows(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.MediaPlayer.OptionsWindows ret = obj.PlatformOptionsWindows;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PlatformOptionsWindows on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlatformOptionsMacOSX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.MediaPlayer.OptionsMacOSX ret = obj.PlatformOptionsMacOSX;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PlatformOptionsMacOSX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlatformOptionsIOS(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.MediaPlayer.OptionsIOS ret = obj.PlatformOptionsIOS;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PlatformOptionsIOS on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlatformOptionsTVOS(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.MediaPlayer.OptionsTVOS ret = obj.PlatformOptionsTVOS;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PlatformOptionsTVOS on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlatformOptionsAndroid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.MediaPlayer.OptionsAndroid ret = obj.PlatformOptionsAndroid;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PlatformOptionsAndroid on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlatformOptionsWindowsPhone(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.MediaPlayer.OptionsWindowsPhone ret = obj.PlatformOptionsWindowsPhone;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PlatformOptionsWindowsPhone on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlatformOptionsWindowsUWP(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.MediaPlayer.OptionsWindowsUWP ret = obj.PlatformOptionsWindowsUWP;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PlatformOptionsWindowsUWP on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlatformOptionsWebGL(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.MediaPlayer.OptionsWebGL ret = obj.PlatformOptionsWebGL;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PlatformOptionsWebGL on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlatformOptionsPS4(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.MediaPlayer.OptionsPS4 ret = obj.PlatformOptionsPS4;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PlatformOptionsPS4 on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SubtitlesEnabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool ret = obj.SubtitlesEnabled;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SubtitlesEnabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SubtitlePath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			string ret = obj.SubtitlePath;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SubtitlePath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SubtitleLocation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			MoonCommonLib.EFileLocation ret = obj.SubtitleLocation;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SubtitleLocation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_VideoLocation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			MoonCommonLib.EFileLocation arg0 = (MoonCommonLib.EFileLocation)ToLua.CheckObject(L, 2, typeof(MoonCommonLib.EFileLocation));
			obj.m_VideoLocation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_VideoLocation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_VideoPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.m_VideoPath = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_VideoPath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_AutoOpen(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.m_AutoOpen = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_AutoOpen on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_AutoStart(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.m_AutoStart = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_AutoStart on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_Loop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.m_Loop = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Loop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_Volume(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_Volume = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Volume on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_Muted(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.m_Muted = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Muted on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_PlaybackRate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_PlaybackRate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_PlaybackRate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_Resample(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.m_Resample = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Resample on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_ResampleMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.Resampler.ResampleMode arg0 = (RenderHeads.Media.AVProVideo.Resampler.ResampleMode)ToLua.CheckObject(L, 2, typeof(RenderHeads.Media.AVProVideo.Resampler.ResampleMode));
			obj.m_ResampleMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_ResampleMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_ResampleBufferSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.m_ResampleBufferSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_ResampleBufferSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_StereoPacking(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.StereoPacking arg0 = (RenderHeads.Media.AVProVideo.StereoPacking)ToLua.CheckObject(L, 2, typeof(RenderHeads.Media.AVProVideo.StereoPacking));
			obj.m_StereoPacking = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_StereoPacking on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_AlphaPacking(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.AlphaPacking arg0 = (RenderHeads.Media.AVProVideo.AlphaPacking)ToLua.CheckObject(L, 2, typeof(RenderHeads.Media.AVProVideo.AlphaPacking));
			obj.m_AlphaPacking = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_AlphaPacking on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_DisplayDebugStereoColorTint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.m_DisplayDebugStereoColorTint = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_DisplayDebugStereoColorTint on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_FilterMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			UnityEngine.FilterMode arg0 = (UnityEngine.FilterMode)ToLua.CheckObject(L, 2, typeof(UnityEngine.FilterMode));
			obj.m_FilterMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_FilterMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_WrapMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			UnityEngine.TextureWrapMode arg0 = (UnityEngine.TextureWrapMode)ToLua.CheckObject(L, 2, typeof(UnityEngine.TextureWrapMode));
			obj.m_WrapMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_WrapMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_AnisoLevel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.m_AnisoLevel = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_AnisoLevel on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Persistent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.Persistent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Persistent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_VideoLayoutMapping(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.VideoMapping arg0 = (RenderHeads.Media.AVProVideo.VideoMapping)ToLua.CheckObject(L, 2, typeof(RenderHeads.Media.AVProVideo.VideoMapping));
			obj.VideoLayoutMapping = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index VideoLayoutMapping on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PauseMediaOnAppPause(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.PauseMediaOnAppPause = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PauseMediaOnAppPause on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PlayMediaOnAppUnpause(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.PlayMediaOnAppUnpause = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PlayMediaOnAppUnpause on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ForceFileFormat(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			RenderHeads.Media.AVProVideo.FileFormat arg0 = (RenderHeads.Media.AVProVideo.FileFormat)ToLua.CheckObject(L, 2, typeof(RenderHeads.Media.AVProVideo.FileFormat));
			obj.ForceFileFormat = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ForceFileFormat on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AudioHeadTransform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			obj.AudioHeadTransform = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AudioHeadTransform on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AudioFocusEnabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.AudioFocusEnabled = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AudioFocusEnabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AudioFocusOffLevelDB(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.AudioFocusOffLevelDB = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AudioFocusOffLevelDB on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AudioFocusWidthDegrees(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.AudioFocusWidthDegrees = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AudioFocusWidthDegrees on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AudioFocusTransform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			RenderHeads.Media.AVProVideo.MediaPlayer obj = (RenderHeads.Media.AVProVideo.MediaPlayer)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			obj.AudioFocusTransform = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AudioFocusTransform on a nil value");
		}
	}
}

